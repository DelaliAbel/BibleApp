<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >

    <!--#region MenuRadioBtn Style-->
    <Style x:Key="MenuRadioBtn" TargetType="RadioButton" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="GroupName"  Value="RdBtn"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Name="Bd" CornerRadius="0"
                            Margin="10 0 10 0"
                            Background="Transparent"
                            BorderBrush="#0202f8">
                        <Grid>
                            <!-- Indicator -->
                            <Rectangle Name="Indicator" HorizontalAlignment="Left" 
                                       Width="3" Height="40" Margin="3 10 0 10"
                                       VerticalAlignment="Center" Fill="Transparent"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Path Height="18" Name="Pt" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" 
                                  Width="18"
                                  Stretch="Uniform" 
                                  Fill="#a0a9b2"
                                  Margin="18 0 10 0"
                                  HorizontalAlignment="Left"/>
                                <ContentPresenter Grid.Column="1" 
                                              Content="{TemplateBinding Content}" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"
                                              Margin="0 0 20 0"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="WhiteSmoke"/>
                            <Setter TargetName="Pt" Property="Fill" Value="#055efd"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter TargetName="Indicator" Property="Fill" Value="#055efd"/>
                            <Setter TargetName="Indicator" Property="Height" Value="40"/>
                            <!--<Setter TargetName="Bd" Property="BorderThickness" Value="3 0 0 0"/>-->
                            <!--<Setter TargetName="Pt" Property="Margin" Value="17 0 15 0"/>-->
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="WhiteSmoke"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter TargetName="Pt" Property="Fill" Value="#055efd"/>
                            <!--<Setter TargetName="Pt" Property="Margin" Value="19 0 15 0"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region MenuBtn style-->

    <Style x:Key="MenuBtn" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="3 0 0 0"
                        CornerRadius="15"
                        BorderBrush="Transparent"
                        Padding="40,0,20,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Path Height="18" Name="Pt" Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" 
                                  Width="18"
                                  Stretch="Uniform" 
                                  Fill="#a0a9b2"
                                  Margin="20 0 15 0"
                                  HorizontalAlignment="Left"/>
                            <ContentPresenter Grid.Column="1" 
                                              Content="{TemplateBinding Content}" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"
                                              Margin="0 0 20 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#7091ae"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#7091ae"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="white"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region SideBarStyle-->
    <!--<Style x:Key="SidebarStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#696969"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="ToolTip" Value="{Binding DisplayName}"/>
        <Setter Property="IsChecked" Value="{Binding IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="menuButton"  Background="{TemplateBinding Background}" 
                            BorderThickness="0">
                        <Grid>
                            --><!-- Selected  --><!--
                            <Border x:Name="btnSelected"  Background="Transparent"/>
                            --><!-- Indicator --><!--
                            <Rectangle Name="Indicator" HorizontalAlignment="Left" 
                                       Width="3" Height="40" Margin="3 0 0 0"
                                       VerticalAlignment="Center" Fill="Transparent"/>

                            <StackPanel Orientation="Vertical"
                                        VerticalAlignment="Center" HorizontalAlignment="Center">
                                --><!-- Icon --><!--
                                <Path x:Name="Icon" Data="{Binding Icon, FallbackValue={StaticResource icon_default}, TargetNullValue={StaticResource icon_default}}" 
                                       Fill="#696969"  HorizontalAlignment="Center" />
                                --><!-- Text --><!--
                                <TextBlock x:Name="txtName" HorizontalAlignment="Center"
                                                Text="{Binding DisplayName}"
                                                Foreground="{TemplateBinding Foreground}"
                                                FontWeight="{TemplateBinding FontWeight}"
                                                FontSize="{TemplateBinding FontSize}"/>
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btnSelected" Property="Background" Value="#ffffff"/>
                            <Setter TargetName="Icon" Property="Fill" Value="#0078d4"/>
                            <Setter TargetName="txtName" Property="Foreground" Value="#0078d4"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Icon" Property="Fill" Value="#0078d4"/>
                            <Setter TargetName="Indicator" Property="Fill" Value="#0078d4"/>
                            <Setter TargetName="Indicator" Property="Height" Value="40"/>
                            --><!--<Setter TargetName="btnSelected" Property="Background" Value="#e6e6fa"/>--><!--
                            <Setter TargetName="txtName" Property="Foreground" Value="#0078d4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--#endregion-->
    
    <!--#region IconBtn-->
    <Style x:Key="IconBtn" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="GroupName" Value="SubRB"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        Name="Bd"
                        Background="{TemplateBinding Background}"
                        BorderThickness="3 0 0 0"
                        CornerRadius="15"
                        BorderBrush="Transparent"
                        Padding="40,0,20,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.3*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Path Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" 
                                  Stretch="Uniform" Height="20" Width="20" Fill="White"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#7091ae"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="white"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#7091ae"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="white"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region MenuTgBtn-->
    <Style x:Key="MenuTgBtn" TargetType="ToggleButton" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <StackPanel Name="stack" 
                                Background="{TemplateBinding Background}"
                                VerticalAlignment="Center">
                        <Path Fill="#a0a9b2"
                              Name="Pt"
                              Data="{Binding Tag, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                              Stretch="Uniform" 
                              Height="18"
                              Width="18"
                              Margin="15"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="stack" Property="Background" Value="white"/>
                            <Setter TargetName="stack" Property="Cursor" Value="Hand"/>
                            <Setter TargetName="Pt" Property="Fill" Value="#055efd"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="stack" Property="FlowDirection" Value="RightToLeft"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region RadioButton-->
    <Style TargetType="RadioButton" x:Key="LivresRadioBtn">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="GroupName"  Value="LRdBtn"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource MaronMedium2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Name="Bd" BorderThickness="0" CornerRadius="10 0 10 0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="1" 
                                              Content="{TemplateBinding Content}" 
                                              VerticalAlignment="Center" 
                                              HorizontalAlignment="Left"
                                              Margin="10 0 10 0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource MaronMedium2}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource MaronMedium2}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region TabItem Style-->
    <Style TargetType="TabItem" x:Key="TabCustom">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border"  Width="{TemplateBinding Width}"  Height="{TemplateBinding Height}" Background="{TemplateBinding Background}"
                            VerticalAlignment="Center" BorderThickness="0" BorderBrush="Gray" CornerRadius="7,7,0,0" Margin="3 7 0 0">
                        <StackPanel>
                            <ContentPresenter x:Name="ContentSite"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                ContentSource="Header"
                                                Margin="10,2"/>
                            <Border x:Name="underLine" Background="Transparent" Margin="10,5,10,0" Height="4" CornerRadius="3"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource MaronMedium2}"/>
                            <Setter TargetName="underLine" Property="Background" Value="{StaticResource MaronMedium2}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource MaronMedium2}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpMenuBtn" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="2"
                            BorderBrush="{StaticResource MaronMedium2}">

                        <StackPanel x:Name="Container"
                                        Orientation="Horizontal">

                            <Path x:Name="iconPath"
                                      Height="15"
                                      Width="10"
                                      Fill="{StaticResource MaronMedium2}"
                                      Stretch="Uniform"
                                      Data="{StaticResource rightArrow}"/>

                            <Rectangle x:Name="Separator"
                                           HorizontalAlignment="Left"
                                           Fill="{StaticResource MaronMedium2}"
                                           Width="2"/>

                        </StackPanel>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Container" Property="FlowDirection" Value="RightToLeft"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard SpeedRatio="5">
                                        <ColorAnimation 
                                                            Storyboard.TargetProperty="(ToggleButton.BorderBrush).Color"
                                                            From="Gray"
                                                            To="White"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard SpeedRatio="5">
                                        <ColorAnimation 
                                                            Storyboard.TargetProperty="(ToggleButton.BorderBrush).Color"
                                                            From="White"
                                                            To="Gray"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!-- #region Scroll Bar Style-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border" Margin="1" CornerRadius="2" Background="Red" BorderBrush="{StaticResource NormalBorderBrush}" BorderThickness="1">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource GlyphBrush}" Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Width="8"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbH" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Height="8" Width="100"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="0"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" CornerRadius="2" Background="Transparent"/>
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource HorizontalNormalBrush}" BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" HorizontalAlignment="Center" CornerRadius="0" Background="#FFFFFF"/>
            <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbH}" Margin="0,1,0,1" Background="{StaticResource NormalBrush}" BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="10" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="10"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Shadow-->
    <DropShadowEffect x:Key="shadow" ShadowDepth="10"
                                      Direction="310"
                                      Color="gray"
                                      Opacity="0.3"
                                      BlurRadius="15"/>
    <!--#endregion-->
    
    <!--#region Shadowleft-->
    <DropShadowEffect x:Key="shadowleft" ShadowDepth="2"
                                      Direction="210"
                                      Color="LightGray"
                                      Opacity="0.3"
                                      BlurRadius="30"/>
    <!--#endregion-->
    
    <!--#region ShadowSimple-->
    <DropShadowEffect x:Key="shadowSimple" ShadowDepth="2"
                                      Direction="210"
                                      Color="LightGray"
                                      Opacity="0.3"
                                      BlurRadius="5"/>
    <!--#endregion-->
    
    <!--#region Border style-->
    <Style x:Key="BorderStyle" TargetType="Border">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect" Value="{StaticResource shadow}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region WindowButtonStyle-->
    <Style TargetType="Button" x:Key="WindowButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                                x:Name="bd"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">

                        <Path
                                    x:Name="ico"
                                    Data ="{TemplateBinding Content}"
                                    Fill="#FF5B5B5B"
                                    Height="15"
                                    Width="15"
                                    Stretch="Uniform"/>

                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd" Property="Border.Background" Value="#f9f9f9"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <!--AND-->
                                <Condition Property="Tag" Value="IsCloseButton"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ico" Property="Fill" Value="White"/>
                            <Setter TargetName="bd" Property="Background" Value="#B94A48"/>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>